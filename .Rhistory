b=2
fx<-dbeta(x, a, b)
plot(x, fx, type="b")
data <- read.csv("humana.csv", stringsAsFactors = TRUE)
head(data)
data %>% group_by(variant) %>% summarise(mean=mean(conversion), sd=sd(conversion), n=n())
data %>% group_by(variant) %>% summarise(mean=mean(conversion), sum(sum = sum(conversion), sd=sd(conversion), n=n())
data %>% group_by(variant) %>% summarise(mean=mean(conversion), total(sum = sum(conversion), sd=sd(conversion), n=n())
data %>% group_by(variant) %>% summarise(mean=mean(conversion), sum = sum(conversion), sd=sd(conversion), n=n())
prop.test(x=6, n=375)
iter=100000
a=520+1
b=10000+1
a1=837+1
b1=10024+1
count<-c()
for (i in 1:iter){
A<-rbeta(1, a, b)
B<-rbeta(1, a1, b1)
count[i]<-ifelse(A>B, 1, 0)
}
pdiff<-sum(count)/iter
pdiff
iter=100000
a=23+1
b=177+1
a1=28+1
b1=172+1
count<-c()
for (i in 1:iter){
A<-rbeta(1, a, b)
B<-rbeta(1, a1, b1)
count[i]<-ifelse(A>B, 1, 0)
}
pdiff<-sum(count)/iter
pdiff
prop.test(x<-c(520,837), n<-c(10000,10024))
a=3+1
b=197+1
qbeta(0.975, a, b)
qbeta(0.025, a, b)
a=6+1
b=(375-6)+1
qbeta(0.975, a, b)
qbeta(0.025, a, b)
t.test(data$conversion~data$variant)
knitr::opts_chunk$set(echo = TRUE)
df<-read.csv("C:\\Users\\bwlos\\OneDrive\\Documents\\ISA365\\humana_rate.csv")
df<-read.csv("C:\\Users\\bwlos\\OneDrive\\Documents\\ISA365\\humana_rate.csv")
df<-read.csv("C:\\Users\\bwlos\\OneDrive\\Documents\\Spring 2023\\ISA365\\humana_rate.csv")
head(df)
library(tidyverse)
df_long<-df %>% pivot_longer(everything(),
names_to="variant",
values_to="clicks")
head(df_long)
df_long %>% group_by(variant) %>% summarize(mean=mean(clicks))
a=837+1
b=(10024-837)+1
qbeta(0.975, a, b)
qbeta(0.025, a, b)
prop.test(x=837, n=10024)
data <- read.csv("BankData.csv", stringsAsFactors = TRUE)
head(data)
data %>% group_by(version) %>% summarise(mean=mean(y), sum = sum(y), sd=sd(y), n=n()
data %>% group_by(version) %>% summarise(mean=mean(y), sum = sum(y), sd=sd(y), n=n())
data %>% group_by(version) %>% summarise(mean=mean(y), count = count(y), sd=sd(y), n=n())
data %>% group_by(version) %>% summarise(mean=mean(y), sd=sd(y), n=n())
data <- read.csv("BankData.csv", stringsAsFactors = TRUE)
head(data)
summary(data)
data <- read.csv("BankData.csv", stringsAsFactors = TRUE)
head(data)
# Proportion test
# Calculate the number of positive responses for each version
response_counts <- data %>%
group_by(version, y) %>%
summarise(count = n())
# Pivot the data to get counts of positive and negative responses for each version
response_counts_pivot <- response_counts %>%
pivot_wider(names_from = y, values_from = count, values_fill = 0)
# Perform proportion test
prop_test <- prop.test(x = c(response_counts_pivot$`Yes`[response_counts_pivot$version == "A"],
response_counts_pivot$`Yes`[response_counts_pivot$version == "B"]),
n = c(response_counts_pivot$`No`[response_counts_pivot$version == "A"],
response_counts_pivot$`No`[response_counts_pivot$version == "B"]))
# Perform proportion test
prop_test <- prop.test(x = c(response_counts_pivot$`Yes`[response_counts_pivot$version == "A"],
response_counts_pivot$`Yes`[response_counts_pivot$version == "B"]),
n = c(response_counts_pivot$`No`[response_counts_pivot$version == "A"],
response_counts_pivot$`No`[response_counts_pivot$version == "B"]))
data <- read.csv("BankData.csv", stringsAsFactors = TRUE)
head(data)
# Proportion test
# Calculate the number of positive responses for each version
response_counts <- data %>%
group_by(version, y) %>%
summarise(count = n())
# Pivot the data to get counts of positive and negative responses for each version
response_counts_pivot <- response_counts %>%
pivot_wider(names_from = y, values_from = count, values_fill = 0)
# Perform proportion test
prop_test <- prop.test(x = c(response_counts_pivot$`Yes`[response_counts_pivot$version == "A"],
response_counts_pivot$`Yes`[response_counts_pivot$version == "B"]),
n = c(response_counts_pivot$`No`[response_counts_pivot$version == "A"],
response_counts_pivot$`No`[response_counts_pivot$version == "B"]))
is.na(data)
colSums(is.na(data))
data <- read.csv("BankData.csv", stringsAsFactors = TRUE)
head(data)
str(data)
chisq_test <- chisq.test(table(data$y, data$version))
chisq.test(table(data$y, data$version))
chisq.test(table(data$y, data$version))
chisq.test(table(data$y, data$version))
table(bank_data$y, bank_data$version)
table(data$y, data$version)
table(data$y, data$version)
with_loan <- data[data$loan == "yes", ]
with_loan <- data[data$loan == "yes", ]
prop_test_A <- prop.test(table(with_loan$y[with_loan$version == "A"],
without_loan$y[without_loan$version == "A"]))
with_loan <- data[data$loan == "yes", ]
without_loan <- bank_data[bank_data$loan == "no", ]
with_loan <- data[data$loan == "yes", ]
without_loan <- data[data$loan == "no", ]
prop_test_A <- prop.test(table(with_loan$y[with_loan$version == "A"],
without_loan$y[without_loan$version == "A"]))
# Filter data for customers with and without a personal loan
with_loan_A <- bank_data$y[bank_data$loan == "yes" & bank_data$version == "A"]
# Filter data for customers with and without a personal loan
with_loan_A <- data$y[data$loan == "yes" & data$version == "A"]
with_loan_B <- data$y[data$loan == "yes" & data$version == "B"]
without_loan_A <- data$y[data$loan == "no" & data$version == "A"]
without_loan_B <- data$y[data$loan == "no" & data$version == "B"]
# Perform two-sample proportion test for version A
prop_test_A <- prop.test(table(with_loan_A, without_loan_A))
chisq.test(data$y, data$version)
table(data$y, data$version, data$loan)
table(data$y, data$version, n())
table(data$y, data$version)
# Loan = no
prop.test(x<-c(2347,2458), n<-c(19057,19000))
# Loan = yes
prop.test(x<-c(265, 219), n<-c(3625, 3619))
table(data$y, data$version, data$amount > 1500)
# $1500 or less
prop.test(x<-c(1777,1734), n<-c(17290,17026))
# More than $1500
prop.test(x<-c(835,943), n<-c(5392,5503))
table(data$y, data$version, data$housing)
# No housing loan
prop.test(x<-c(1651,1703), n<-c(10100,9981))
# Has a housing loan
prop.test(x<-c(961,974), n<-c(12582,12548))
1-(1 - (0.05/8))**8
1-.95^8
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
set.seed(633)
dif<-c() # initialize a vector for storage
for (i in 1:1000){
dif[i]<-mean(rnorm(n=50, mean=10, sd=2))
}
hist(dif, breaks=40)
mean(dif)
sd(dif)
2 / sqrt(50)
set.seed(633)
dif<-c() # initialize a vector for storage
for (i in 1:100000){
dif[i]<-mean(rnorm(n=500, mean=10, sd=2))
}
hist(dif, breaks=40)
sd(dif) # empirical standard deviation
2/sqrt(500) # theoretical standard deviation
sub<-data %>% filter(call_type=="video")
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
set.seed(633)
dif<-c() # initialize a vector for storage
for (i in 1:1000){
dif[i]<-mean(rnorm(n=50, mean=10, sd=2))
}
hist(dif, breaks=40)
mean(dif)
sd(dif)
2 / sqrt(50)
set.seed(633)
dif<-c() # initialize a vector for storage
for (i in 1:100000){
dif[i]<-mean(rnorm(n=500, mean=10, sd=2))
}
hist(dif, breaks=40)
sd(dif) # empirical standard deviation
2/sqrt(500) # theoretical standard deviation
df <- data.frame(
Player = c("Derek Jeter", "David Justice"),
Year1 = c(.250, .253),  # Batting average
Year2 = c(.314, .321),
Year3 = c(.291, .329),
Combined = c(.300, .298)   # Number of visitors
)
# Print the data frame
print(df)
data <- read.csv("AudioVideo.csv", stringsAsFactors = TRUE)
sub<-data %>% filter(call_type=="video")
library(tidyverse)
sub<-data %>% filter(call_type=="video")
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
set.seed(633)
dif<-c() # initialize a vector for storage
for (i in 1:1000){
dif[i]<-mean(rnorm(n=50, mean=10, sd=2))
}
hist(dif, breaks=40)
mean(dif)
sd(dif)
2 / sqrt(50)
set.seed(633)
dif<-c() # initialize a vector for storage
for (i in 1:100000){
dif[i]<-mean(rnorm(n=500, mean=10, sd=2))
}
hist(dif, breaks=40)
sd(dif) # empirical standard deviation
2/sqrt(500) # theoretical standard deviation
df <- data.frame(
Player = c("Derek Jeter", "David Justice"),
Year1 = c(.250, .253),  # Batting average
Year2 = c(.314, .321),
Year3 = c(.291, .329),
Combined = c(.300, .298)   # Number of visitors
)
# Print the data frame
print(df)
data <- read.csv("AudioVideo.csv", stringsAsFactors = TRUE)
sub<-data %>% filter(call_type=="video")
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
set.seed(633)
dif<-c() # initialize a vector for storage
for (i in 1:1000){
dif[i]<-mean(rnorm(n=50, mean=10, sd=2))
}
hist(dif, breaks=40)
mean(dif)
sd(dif)
2 / sqrt(50)
set.seed(633)
dif<-c() # initialize a vector for storage
for (i in 1:100000){
dif[i]<-mean(rnorm(n=500, mean=10, sd=2))
}
hist(dif, breaks=40)
sd(dif) # empirical standard deviation
2/sqrt(500) # theoretical standard deviation
df <- data.frame(
Player = c("Derek Jeter", "David Justice"),
Year1 = c(.250, .253),  # Batting average
Year2 = c(.314, .321),
Year3 = c(.291, .329),
Combined = c(.300, .298)   # Number of visitors
)
# Print the data frame
print(df)
data <- read.csv("https://raw.githubusercontent.com/losiewbw/ISA633/main/AudioVideo.csv", stringsAsFactors = TRUE)
head(data)
library(tidyverse)
data %>% group_by(call_type) %>% summarise(mean=mean(sales_one_week), sd=sd(sales_one_week), n=n())
boxplot(sales_one_week~call_type, data=data)
t.test(sales_one_week~call_type, data=data)
sub<-data %>% filter(call_type=="video")
t.test(sub$sales_one_week)
a=837+1
b=(10024-837)+1
qbeta(0.975, a, b)
qbeta(0.025, a, b)
prop.test(x=837, n=10024)
data <- read.csv("https://raw.githubusercontent.com/losiewbw/ISA633/main/BankData.csv", stringsAsFactors = TRUE)
head(data)
str(data)
table(data$y, data$version)
chisq.test(data$y, data$version)
table(data$y, data$version, data$loan)
# Loan = no
prop.test(x<-c(2347,2458), n<-c(19057,19000))
# Loan = yes
prop.test(x<-c(265, 219), n<-c(3625, 3619))
table(data$y, data$version, data$housing)
# Has a housing loan
prop.test(x<-c(961,974), n<-c(12582,12548))
prop.test(x=c(961, 974), n=c(11621+961, 11574+974))
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
# Users to achieve 80% power with 5% change in user spend
((2*(1.96 + .7881)^2) * 30^2)/(3.75 * 0.05)^2
## Correct -- I think
# Users to achieve 80% power with 5% change in user spend
((2*(1.96 + .84)^2) * 30^2)/(3.75 * 0.05)^2
# Users to achieve 80% power with 5% change in conversion rate
((2*(1.96 + .84)^2) * (0.05*(1-0.05)))/(0.05*0.05)^2
## Correct
# Users to achieve 80% power with 5% change in conversion rate
((2*(1.96 + .84)^2) * (0.05*(1-0.05)))/(0.05*0.05)^2
results<-c()
d<-c(5, 10, 15, 30, 35, 40, 45, 50, 60, 65)
for(i in 1:length(d)){
results[i]<-power.t.test(delta=d[i], n=100, sd=30, sig.level=0.05, power=NULL)$power
}
plot(d, results, xlab="delta", ylab="power")
abline(h=0.8, col="red")
results<-c()
d<-c(5, 10, 15, 30, 35, 40, 45, 50, 60, 65)
for(i in 1:length(d)){
results[i]<-power.t.test(delta=d[i], n=NULL, sd=30, sig.level=0.05, power=0.8)$n
}
plot(d, results, xlab="delta", ylab="sample size")
results<-c()
d<-c(5, 10, 15, 30, 35, 40, 45, 50, 60, 65)
for(i in 1:length(d)){
results[i]<-power.t.test(delta=d[i], n=NULL, sd=30, sig.level=0.1, power=0.8)$n
}
plot(d, results, xlab="delta", ylab="sample size")
power.prop.test(n=NULL, p1=0.23, p2=0.28, sig.level = 0.05, power=.8)
power.prop.test(n=NULL, p1=0.023, p2=0.023+0.05*0.023, sig.level = 0.05, power=.8)
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
library(tidyverse)
df<-read.csv("https://raw.githubusercontent.com/losiewbw/ISA633/main/zappos.csv")
df_long <- df %>% pivot_longer(everything(),
names_to"treatment",
library(tidyverse)
df<-read.csv("https://raw.githubusercontent.com/losiewbw/ISA633/main/zappos.csv")
df_long <- df %>% pivot_longer(everything(),
names_to = "treatment",
values_to = "spend")
df_long$treatment<- as.factor(df_long$treatment)
df_long %>% group_by(treatment) %>% summarize("mean sales" = mean(spend),
"std sales" = sd(spend), "count" = n())
boxplot(df_long$spend~df_long$treatment)
mod<-aov(spend~treatment, data = df_long)
summary(mod)
library(multcomp)
install.packages("multcomp")
library(multcomp)
tukey<-glht(mod, linfct=mcp(treatments="Tukey"))
library(multcomp)
tukey<-glht(mod, linfct=mcp(treatment="Tukey"))
cld(tukey)
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
library(tidyverse)
df<-read.csv("https://raw.githubusercontent.com/losiewbw/ISA633/main/zappos.csv")
df_long <- df %>% pivot_longer(everything(),
names_to = "treatment",
values_to = "spend")
df_long$treatment<- as.factor(df_long$treatment)
df_long %>% group_by(treatment) %>% summarize("mean sales" = mean(spend),
"std sales" = sd(spend), "count" = n())
boxplot(df_long$spend~df_long$treatment)
mod<-aov(spend~treatment, data = df_long)
summary(mod)
library(multcomp)
tukey<-glht(mod, linfct=mcp(treatment="Tukey"))
cld(tukey)
summary(tukey)
plot(tukey)
t.test(df$C)
df<-read.csv("https://raw.githubusercontent.com/losiewbw/ISA633/main/uber.csv")
df_long <- df %>% pivot_longer(everything(),
names_to = "treatment",
values_to = "bookings")
df_long$treatment<- as.factor(df_long$treatment)
df_long %>% group_by(treatment, bookings) %>% summarize(n=n()) %>% mutate(freq=n/sum(n))
df<-read.csv("https://raw.githubusercontent.com/losiewbw/ISA633/main/uber.csv")
df_long <- df %>% pivot_longer(everything(),
names_to = "treatment",
values_to = "bookings")
df_long$treatment<- as.factor(df_long$treatment)
df_long %>% group_by(treatment, bookings) %>% summarize(n=n()) %>% mutate(freq=n/sum(n))
full<-glm(bookings~treatment, data=df_long, family="binomial")
anova(full, test="Chisq")
library(multcomp)
comps<-glht(full, linfct = mcp(treatment="Tukey"))
summary(comps)
plot(comps)
0.05/55
1-(1-0.05)^30
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
df<-read.csv("https://raw.githubusercontent.com/losiewbw/ISA633/main/CallCenter.csv", stringsAsFactors = TRUE)
df$agent<-as.factor(df$agent)
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
df<-read.csv("https://raw.githubusercontent.com/losiewbw/ISA633/main/CallCenter.csv", stringsAsFactors = TRUE)
df$agent<-as.factor(df$agent)
library(tidyverse)
df %>% group_by(script) %>% summarize("mean"=mean(seconds), "sd"=sd(seconds), "count"=n())
df %>% ggplot(aes(x=agent, y=seconds, group=script))+geom_text(aes(label=script), size=6)+
xlab("Agent")+ylab("Seconds")+
theme_bw()+
theme(axis.title=element_text(size=18))
mod1<-aov(seconds~script+agent, data=df)
summary(mod1)
mod1<-aov(seconds~script+agent, data=df)
summary(mod1)
original_par <- par() #saves the default graphics settings so when we change them to make residual plots or the Tukey plots we can revert.
library(multcomp)
tukey<-glht(mod1, linfct=mcp(script="Tukey"))
summary(tukey)
par(mar = c(5, 8, 4, 2))
plot(tukey)
par( mfrow = c(2,2) )
plot(mod1, which=5)
plot(mod1, which=1)
plot(mod1, which=2)
plot(residuals(mod1) ~ as.factor(script), main="Residuals vs Exp. Unit", font.main=1,data=df)
abline(h = 0, lty = 2)
set.seed(13)
script<-factor(c(1,2,3,4))
agent1t <- sample(script,4)
agent2t <- sample(script,4)
agent3t <- sample(script,4)
agent4t <- sample(script,4)
agent5t <- sample(script,4)
agent6t <- sample(script,4)
treatments<-c(agent1t,agent2t, agent3t, agent4t, agent5t, agent6t)
block <- factor( rep(c("agent 1", "agent 2", "agent 3", "agent 4", "agent 5", "agent 6"),each=4))
plan<-data.frame("Agent" = block, "treatment", "Script" = treatments)
plan
library(agricolae)
script<-c(1,2,3,4)
outdesign <- design.rcbd(script, r=6, seed = 13)
rcb <- outdesign$book
levels(rcb$block) <- c("agent 1", "agent 2", "agent 3", "agent 4", "agent 5", "agent 6")
rcb
set.seed(13)
rcb$y<-round(rnorm(24), digits = 1)
rcb
library(agricolae)
script<-c(1,2,3,4)
outdesign <- design.rcbd(script, r=6, seed = 13)
rcb <- outdesign$book
levels(rcb$block) <- c("agent 1", "agent 2", "agent 3", "agent 4", "agent 5", "agent 6")
rcb
set.seed(13)
rcb$y<-round(rnorm(24), digits = 1)
rcb
mod<-aov(y~block+script, data=rcb)
summary(mod)
library(agricolae)
display<-c(1,2,3,4)
outdesign<-design.lsd(display, seed=13)
lsd<-outdesign$book
levels(lsd$row)<-c("Week 1", "Week 2", "Week 3", "Week 4")
levels(lsd$col)<-c("Store 1", "Store 2", "Store 3", "Store 4")
lsd
lsd$sales<-75+3*as.numeric(outdesign$book$row)+4*as.numeric(outdesign$book$col)+10*as.numeric(outdesign$book$display)+rnorm(16,0,3)
lsd$sales<-round(lsd$sales, 2)
lsd
lsd %>% ggplot(aes(x=row, y=sales, group=display))+
geom_text(aes(label=display))+
facet_grid(~col)+
theme_bw()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),axis.title.x = element_blank())+
ylab("Total Sales")
mod<-aov(sales~row+col+display, data=lsd)
summary(mod)
par(original_par) #removes the formatting for the residual plots above
library(multcomp)
tukey<-glht(mod, linfct=mcp(display="Tukey"))
summary(tukey)
par(mar = c(5, 8, 4, 2))
plot(tukey)
par( mfrow = c(2,2) )
plot(mod1, which=5)
plot(mod1, which=1)
plot(mod1, which=2)
plot(residuals(mod) ~ display, main="Residuals vs Exp. Unit", font.main=1,data=lsd)
abline(h = 0, lty = 2)
df<-read.csv("https://raw.githubusercontent.com/losiewbw/ISA633/main/CarData.csv")
df
mod<-aov(distance1~speed+fuel+car, data=df)
summary(mod)
df_long<-df %>% pivot_longer(c("distance1", "distance2"),
names_to="replicate",
values_to="distance")
df_long
mod<-aov(distance~speed+fuel+car, data=df_long)
summary(mod)
mod<-aov(distance~speed+fuel+car+replicate, data=df_long)
summary(mod)
