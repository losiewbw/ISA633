knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
set.seed(13)
dif<-c()
for (i in 1:10000){
dif[i]<-mean(rnorm(n=100, mean=20, sd=5))-mean(rnorm(n=100, mean=15, sd=5))
}
hist(dif, breaks=40)
sqrt((25/100)+(25/100))
mean(dif)
20-15
sd(dif)
pip install plotline
pip install plotnine
install.packages("plotnine")
reticulate::repl_python()
reticulate::repl_python()
import pandas as pd
from plotnine import ggplot, aes, geom_text, xlab, ylab, theme_bw, theme, geom_boxplot, element_text
# Creating the plot
plot = (ggplot(df, aes(x='Treatment', y='Spend')) +
geom_boxplot()+
theme_bw() +
theme(axis_title=element_text(size=18)))
# Displaying the plot
print(plot)
quit
install.packages("pandas")
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
t.test(Spend~Treatment, data=df)
knitr::opts_chunk$set(echo = TRUE,
cache = TRUE,
warning = FALSE,
message = FALSE)
df<-read.csv("https://raw.githubusercontent.com/losiewbw/ISA633/main/ab_revenue.csv", stringsAsFactors = TRUE)
head(df)
library(tidyverse)
df %>% group_by(Treatment) %>% summarise(mean=mean(Spend), sd=sd(Spend), n=n())
boxplot(Spend~Treatment, data=df)
set.seed(13)
dif<-c() # initialize a vector for storage
for (i in 1:10000){
dif[i]<-mean(rnorm(n=100, mean=20, sd=5))-mean(rnorm(n=100, mean=15, sd=5))
}
hist(dif, breaks=40)
sd(dif)
sqrt((25/100)+(25/100))
mean(dif)
20-15
t.test(Spend~Treatment, data=df)
samples<-list()
means<-c()
for (i in 1:100){
samples[[i]]<-rnorm(20, 3, 0.5)
means[i]<-mean(samples[[i]])
}
p<-lapply(samples, t.test, conf.level=0.95)
lower<-c()
upper<-c()
for (i in 1:100){
lower[i]<-p[[i]]$conf.int[1]
upper[i]<-p[[i]]$conf.int[2]
}
df1<-data.frame(lower, upper, means)
df1$x<-seq(1:100)
library(ggplot2)
ggplot(df1, aes(x=x, y=means))+geom_point()+geom_errorbar(aes(ymax=upper, ymin=lower))+geom_hline(yintercept = 3, color="red")+
theme_bw()+ylab("Confidence Interval")+xlab("Sample Number")
p<-lapply(samples, t.test, conf.level=0.99)
samples<-list()
means<-c()
for (i in 1:100){
samples[[i]]<-rnorm(20, 3, 0.5)
means[i]<-mean(samples[[i]])
}
p<-lapply(samples, t.test, conf.level=0.99)
lower<-c()
upper<-c()
for (i in 1:100){
lower[i]<-p[[i]]$conf.int[1]
upper[i]<-p[[i]]$conf.int[2]
}
df1<-data.frame(lower, upper, means)
df1$x<-seq(1:100)
library(ggplot2)
ggplot(df1, aes(x=x, y=means))+geom_point()+geom_errorbar(aes(ymax=upper, ymin=lower))+geom_hline(yintercept = 3, color="red")+xlim(2.4, 3.6)+
theme_bw()+ylab("Confidence Interval")+xlab("Sample Number")
samples<-list()
means<-c()
for (i in 1:100){
samples[[i]]<-rnorm(20, 3, 0.5)
means[i]<-mean(samples[[i]])
}
p<-lapply(samples, t.test, conf.level=0.99)
lower<-c()
upper<-c()
for (i in 1:100){
lower[i]<-p[[i]]$conf.int[1]
upper[i]<-p[[i]]$conf.int[2]
}
df1<-data.frame(lower, upper, means)
df1$x<-seq(1:100)
library(ggplot2)
ggplot(df1, aes(x=x, y=means))+geom_point()+geom_errorbar(aes(ymax=upper, ymin=lower))+geom_hline(yintercept = 3, color="red")+ylim(2.4, 3.6)+
theme_bw()+ylab("Confidence Interval")+xlab("Sample Number")
sub<-df %>% filter(Treatment=="B")
t.test(sub$Spend)
library(tidyverse)
sub<-df %>% filter(Spend>0)
